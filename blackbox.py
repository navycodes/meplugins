import traceback
import config

from pyrogram import filters
from core import app
from utils.functions import Tools, update_user_data
from utils.decorators import Checklimit
from logs import LOGGER

BLACKBOX_CHAT_URL = "https://api.maelyn.sbs/api/blackbox/chat"
BLACKBOX_IMAGE_URL = "https://api.maelyn.sbs/api/blackbox/image"
BLACKBOX_IMAGINE_URL = "https://api.maelyn.sbs/api/blackbox/imagine"

__MODULE__ = "Blackbox-AI"

__HELP__ = """
<blockquote expandable>

ðŸ§  <b>Blackbox AI Assistant</b>

â€¢ <b>/blackbox</b> (question) â€“ Ask any question and get answers.  
â€¢ <b>/blackbox</b> (reply photo) (question) â€“ Ask based on a photo.  
â€¢ <b>/blackbox generate</b> (prompt) â€“ Generate an image using Blackbox AI.

</blockquote>
"""



@app.on_message(filters.command(["blackbox"]) & ~config.BANNED_USERS)
@Checklimit("blackboxquery")
async def blackbox_cmd(client, message):
    proses = await message.reply(">**Proses your request...**")
    if len(message.command) < 2:
        return await proses.edit(
            f">**Please give a prompt or reply with an image and prompt.**"
        )
    user_id = message.from_user.id
    prompt = client.get_text(message)
    try:
        headers = {"mg-apikey": config.API_MAELYN}

        if message.reply_to_message and message.reply_to_message.photo:
            if len(message.command) < 2:
                return await proses.edit(
                    f">**Please provide a prompt to analyze the image.**"
                )
            photo_url = await Tools.upload_media(message)

            params = {"url": photo_url, "q": prompt}
            r = await Tools.fetch.get(
                BLACKBOX_IMAGE_URL, headers=headers, params=params
            )
            if r.status_code != 200:
                return await proses.edit(">**Please try again later, maybe server is down.**")
            data = r.json()
            await update_user_data(client, user_id, "blackboxquery", True)
            return await proses.edit(data.get("result"))

        elif prompt.lower().startswith("generate "):
            if len(message.command) < 3:
                return await proses.edit(
                    f">**Please reply to a message prompt or give the prompt!\nExample: `{message.text.split()[0]} cute cats`**"
                )
            prompt = prompt[9:].strip()
            params = {"prompt": prompt}
            r = await Tools.fetch.get(
                BLACKBOX_IMAGINE_URL, headers=headers, params=params
            )
            if r.status_code != 200:
                return await proses.edit(">**Please try again later, maybe server is down.**")
            data = r.json()
            img_url = data["result"]["url"]
            await message.reply_photo(
                img_url, caption=f">**Generated by {client.me.mention}**"
            )
            await update_user_data(client, user_id, "blackboxquery", True)
            return await proses.delete()
        else:
            params = {"q": prompt}
            r = await Tools.fetch.get(BLACKBOX_CHAT_URL, headers=headers, params=params)
            if r.status_code != 200:
                return await proses.edit(">**Please try again later, maybe server is down.**")
            data = r.json()
            await update_user_data(client, user_id, "blackboxquery", True)
            return await proses.edit(data.get("result"))

    except Exception as e:
        LOGGER.error(traceback.format_exc())
        return await proses.edit(f">**Terjadi kesalahan:**\n`{e}`")
